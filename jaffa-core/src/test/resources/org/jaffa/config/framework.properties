#######################################################################
# Properties File for all the application framework settings
#
# This configuration is used for unit testing...
#
# Author: Paul Extance
#######################################################################

# This the the name of a file in the web servers route directory.
# It is used to get the WEB_SERVER_ROOT. Don't use a file that is not in the root directory!!!
# if no value is specified '/index.html' is often a good value to use 
framework.WebServerRootFile=/index.html

# This setting is for the environment for the persistence engine
framework.persistence.Persistence_Engine=org.jaffa.persistence.engines.jdbcengine.Engine

# Location of the components.xml file. If not specified it looks in the classpath for resources/components.xml
framework.ComponentsFile=classpath:///resources/components.xml

# Log4j Configuration To Use.
#    For no configuration on startup, set to 'none'. Only use this setting if the Web Conainter has already set up log4j
#    Example: framework.Log4JConfig=none
#    For a basic configurator (which logs all messages to the console), set the value 'default'.
#    Example: framework.Log4JConfig=default
framework.Log4JConfig=none

# Set deployment type for the Middleware factory, 2 for 2-tier (web server only) and 3 for 3-tier (J2EE Server)
# If this is set to 1, then the factory will work in a Test Mode, and refer to the 'middleware_test.properties' 
# file to see per inteface what implementation should be used.
# By default '2' will be used if this is set incorrectly
framework.middleware.Tier=2

# The init file used by the JDBC engine, relative to the classpath
framework.persistence.jdbcengine.init=resources/init.xml

# Location to load the role based secuirty policy file from
# If not specified it looks in the classpath for resources/roles.xml
framework.security.policy.url=classpath:///resources/Roles.xml

# The default html fragment used by the Presentation for guarded buttons, relative to the classpath
framework.presentation.defaultGuardedHtml.location=resources/html/defaultGuardedFragment.html

# This property holds the url for the core-rules file used by the Dynamic Rules Engine.
# The default-value is 'classpath:///resources/core-rules.xml'
framework.rules.core-rules.url=classpath:///resources/core-rules.xml

# This property holds the directory in which the customer variations to the core-rules for the Dynamic Rules Engine will be located.
# This property may be left empty, if no variations are being used.
# Eg: 'file:///C:/sandbox/custom-rules-dir'
# NOTE: The variation files, if any, should be named as <variation>-rules.xml
framework.rules.variations.directory=classpath:///resources

# This property holds the comma-separated list of the various validator.xml urls used by the Dynamic Rules Engine.
# The default-value is 'classpath:///resources/validators.xml'
# Eg: 'classpath:///resources/validators.xml,file:///C:/sandbox/validators/custom-validator.xml'
framework.rules.validators.url.list=classpath:///resources/validators.xml

# This property holds the values to be displayed in the 'MaxRecords' dropdown of the Finder/Lookup criteria screens
# The first element in the list will determine the initial value of the dropdown.
# The default value for this property is '25,50,100,500,1000,2500,5000'
framework.finder.maxRecordsDropDownOptions=25,50,100,500,1000,2500,5000

# The Jaffa exceptions typically contain error codes.
# Invoking the getLocalizedMessage() on a Jaffa exception will return an appropriate message by looking up the error-code in the specified ResourceBundle. No error is raised in case an invalid ResourceBundle is specified, or if no entry exists for the error-code.
# The ResourceBundle should refer to a properties file in the classpath
# Eg. org/jaffa/resources/ApplicationResources
framework.messageResources.bundle=ApplicationResources
