<?xml version="1.0" encoding="UTF-8"?>

<project basedir=".." default="build" name="build" xmlns:sonar="antlib:org.sonar.ant" xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="imports.basedir" value="${basedir}/../JaffaBuild"/>
  <property name="shared.version.propfile" value="${imports.basedir}/build/shared.version.properties"/>

  <!-- make sure 'ant-contrib-1.0b1.jar' is in $ANT_HOME$/lib -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

  <property environment="env"/>
  <property file="${imports.basedir}/build/global.ant.properties"/>
  <property file="./build/project.ant.properties"/>
  <property file="${config.file}"/>
  <property file="${imports.basedir}/build/shared.ant.properties"/>
  <property file="${shared.version.propfile}"/>

  <import file="${imports.basedir}/build/build-module.xml"/>
  <import file="${imports.basedir}/build/code-generator.xml"/>
  <defaultexcludes add="${cvs.excludes}"/>

  <!-- Define the SonarQube project properties-->
  <import file="sonar.properties"/>
  
  <target name="usage">
    <echo>
Usage:    build target-name

Available Code Generator Targets:
  generate-all          - Generate all domain and CRUD code
  generate-domain       - Generate all domain code
  generate-app          - Executes the AppBuilder to generate the CRUD descriptors
  generate-finders      - Generate all finder code
  generate-viewers      - Generate all viewer code
  generate-maintenance  - Generate all maintenance code
  generate-lookups      - Generate all lookup code
  generate-skeletons    - Generate all skeleton code
  formatXml             - Format all pattern XML
  formatXml-domain      - Format domain pattern XML
  formatXml-finder      - Format finder pattern XML
  formatXml-lookup      - Format lookup pattern XML
  formatXml-viewer      - Format viewer pattern XML
  formatXml-maintenance - Format maintenance pattern XML
  formatXml-skeleton    - Format skeleton pattern XML
  list-customizations   - Lists the customizations made to code generated files. You may modify the fileset used in 'JaffaBuild/build/code-generator.xml: list-customizations' to narrow the set of files to scan

Available Module Targets:
  clean            - Delete all working folders, so the next build is from source
  get-dependencies - Builds all the dependencies, if not built already.
  compile          - Compile all classes
  jar              - Build JAR file for deployment
  html             - Build a ZIP of HTML needed for inclusion in the WAR file
  build            - Build JAR and ZIP
  javadoc          - Generate Javadoc

Available Module Targets for aiding quick development:
  fast-JSP-Deploy                - Copy JSP Files for current module to Server
  fast-Class-Deploy              - Builds the current module, copies its JAR to the server, restarts the server
  fast-Class-Deploy-With-Aspects - Builds the current module, applies aspects, copies the aspect-ized JAR to the server, restarts the server

Available Testing Targets:
  test-junit - Run Unit Tests and generate report
  findbugs   - Run findbugs (If findbugs is installed, and FINDBUGS_HOME set)  
    </echo>
  </target>
   <!-- ====================================================================================================== -->
   <!-- Define the SonarQube target                                                                                   -->
   <!-- ====================================================================================================== -->   
   <target name="sonar" >
    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
        <!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
        <classpath path="/u01/apache-ant-1.9.1/lib/sonar-ant-task-*.jar" />
    </taskdef>
    <!-- Execute the SonarQube analysis -->
    <sonar:sonar />
   </target>  

</project>
